<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPatient</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0;
adjacent = false;
left = true;
right = false;
scaled = false;
maxHp = 30;
hp = maxHp;
startX = x;
hurt = false;
isVisible = true;
blinkTime = 20;
imgBlink = blinkTime

defeat[0] = defeat0;
defeat[1] = defeat1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if adjacent == true
 //image_index = 1;
//else
 //image_index = 0;

scaleBuffer = fwd;
if (instance_exists(obj_tester))
{
 if (obj_tester.horiz == horiz and fwd == obj_tester.fwd+1)
 {
  adjacent=true;
 }

 if (obj_tester.horiz == horiz and fwd == obj_tester.fwd-1)
 {
  adjacent=true;
 }

 if (obj_tester.horiz+1 == horiz and fwd == obj_tester.fwd)
 {
  adjacent=true;
 }

 if (obj_tester.horiz-1 == horiz and fwd == obj_tester.fwd)
 {
  adjacent=true;
 }

 if ((horiz - obj_tester.horiz)!= 1 and (horiz - obj_tester.horiz)!= -1)
 {
  if horiz != obj_tester.horiz
   adjacent=false;
 }

  if ((fwd - obj_tester.fwd)!= 1 and (fwd - obj_tester.fwd)!= -1)
  {
   if fwd != obj_tester.fwd
    adjacent=false;
  }

  if fwd != obj_tester.fwd and horiz != obj_tester.horiz
   adjacent = false;
}
 //scale by distance 
if scaled == false
{
 adjustedScaleX = power(0.85, fwd);
 adjustedScaleY = power(0.85, fwd);
 image_xscale = adjustedScaleX;
 image_yscale = adjustedScaleY;
 depth = 1+(2*fwd);
 scaled = true;
}
//if blink == true;
 //image.visible 
if (adjacent == true and dong.visible == false)
{
 if (imgBlink &gt; 0)
  imgBlink -= 1;
 
 if (imgBlink == 0 and visible == true)
  {visible = false; imgBlink = blinkTime;}
 else if (imgBlink == 0 and visible == false)
  {visible = not visible; imgBlink = blinkTime;}
}

if !adjacent
{imgBlink = blinkTime; visible = true;}

//shaking
if (hp &lt; 25)
 {x = irandom_range(startX-sprite_width/30, startX+sprite_width/30);}

//defeat 
if hp &lt;= 0
 { image_alpha -= .02; obj_tester.locked = false; }

if image_alpha &lt;= 0
 instance_destroy();
  
if (hp &lt;= 0 and !audio_is_playing(choose(defeat0, defeat1)))
 audio_play_sound(defeat[irandom_range(0, 1)], 3, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if adjacent == true and obj_tester.ranNum == 0
{
 obj_tester.locked = true;
 objTarget.visible = true;
 dong.visible = true;
 obj_tester.myTarget = id;
 
 if (obj_tester.horiz &gt; horiz)
 {
  obj_tester.left = true; obj_tester.right = false;
  if (left == true)
  {
   image_xscale *= -1; right = true; left = false; 
  }
 }
 if (obj_tester.horiz &lt; horiz) 
 {
  obj_tester.left = false; obj_tester.right = true;
  if (right == true)
  {
   image_xscale *= -1; left = true; right = false;
  }
 }
 obj_tester.ranNum = irandom_range(1, 4);
 obj_tester.storedRan = obj_tester.ranNum;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_text(x, y, string(hp));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
